@startuml

title __CONNECT's Class Diagram__\n

  namespace princess.connect {
    class princess.connect.Game {
        {static} + ADV_PAGE : int
        {static} + ADV_STATE : int
        {static} + CHA_PAGE : int
        {static} + DRAW_PAGE : int
        {static} + ENABLE_INFO_SWITCH_MENU : boolean
        {static} + FRAME_RATE : int
        {static} + GAME_FRAME_HEIGHT : int
        {static} + GAME_FRAME_WIDTH : int
        {static} + INITIAL_STATE : int
        {static} + MAXIMUM_DEBUG_RECORDS : int
        {static} + PLAYER_MENU : int
        {static} + SETTING_PAGE : int
        {static} + showDebugInfo : boolean
        {static} + showDeviceInfo : boolean
        {static} - ITEM_DEBUG_INFO : int
        {static} - ITEM_DEVICE_INFO : int
        {static} - ITEM_EXIT : int
        {static} - ITEM_MENU : int
        - _sensors : SensorManager
        + onCreate()
        + onCreateOptionsMenu()
        + onKeyDown()
        + onKeyUp()
        + onOptionsItemSelected()
        # onDestroy()
        # onPause()
        # onResume()
        # onStop()
    }
  }
  

  namespace princess.connect {
    interface princess.connect.GameObject {
        {abstract} + move()
        {abstract} + show()
    }
  }
  

  namespace princess.connect {
    class princess.connect.GameView {
        {static} + runtime : Context
        {static} + screenHeight : int
        {static} + screenWidth : int
        + GameView()
        + onWindowFocusChanged()
        + setGameEngine()
    }
  }
  

  namespace princess.connect {
    interface princess.connect.KeyEventHandler {
        {static} + KEY_DOWN : int
        {static} + KEY_LEFT : int
        {static} + KEY_RIGHT : int
        {static} + KEY_SELECT : int
        {static} + KEY_UP : int
        {abstract} + keyPressed()
        {abstract} + keyReleased()
    }
  }
  

  namespace princess.connect {
    class princess.connect.Pointer {
        {static} + HOVER : int
        {static} + LEFT_MOUSE_BUTTON : int
        {static} + MIDDLE_MOUSE_BUTTON : int
        {static} + RIGHT_MOUSE_BUTTON : int
        {static} + TOUCH : int
        - _id : int
        - _type : int
        - _x : int
        - _y : int
        + Pointer()
        + Pointer()
        + getID()
        + getType()
        + getX()
        + getY()
    }
  }
  

  namespace princess.connect {
    interface princess.connect.PointerEventHandler {
        {abstract} + pointerMoved()
        {abstract} + pointerPressed()
        {abstract} + pointerReleased()
    }
  }
  

  namespace princess.connect {
    interface princess.connect.ReleasableResource {
        {abstract} + release()
    }
  }
  

  namespace princess.connect {
    interface princess.connect.SensorEventHandler {
        {abstract} + accelerationChanged()
        {abstract} + orientationChanged()
    }
  }
  

  princess.connect.Game -up-|> android.app.Activity
  princess.connect.Game o-- princess.connect.engine.GameEngine : _engine
  princess.connect.Game o-- princess.connect.GameView : _view
  princess.connect.GameView -up-|> android.view.SurfaceView
  princess.connect.GameView o-- princess.connect.engine.GameEngine : _engine


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
